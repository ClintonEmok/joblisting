[{"C:\\Users\\20193907\\Desktop\\Code Orange\\job-listings\\job-listings\\react-ui-app\\src\\index.js":"1","C:\\Users\\20193907\\Desktop\\Code Orange\\job-listings\\job-listings\\react-ui-app\\src\\App.js":"2","C:\\Users\\20193907\\Desktop\\Code Orange\\job-listings\\job-listings\\react-ui-app\\src\\components\\JobBoard.js":"3"},{"size":222,"mtime":1608073602235,"results":"4","hashOfConfig":"5"},{"size":2968,"mtime":1608130457113,"results":"6","hashOfConfig":"5"},{"size":2331,"mtime":1608129997586,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1gwn8cc",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\20193907\\Desktop\\Code Orange\\job-listings\\job-listings\\react-ui-app\\src\\index.js",[],["17","18"],"C:\\Users\\20193907\\Desktop\\Code Orange\\job-listings\\job-listings\\react-ui-app\\src\\App.js",["19"],"import React, { useState, useEffect } from \"react\";\nimport data from \"./assets/data.json\";\nimport JobBoard from \"./components/JobBoard\";\n\n/**\n *  Clinton Emok, 15-12-2020\n */\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([\"CSS\"]);\n\n  useEffect(() => setJobs(data), []);\n\n  const filterFunction = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some((tag) => filters.includes(tag));\n  };\n\n  const handleTagClick = (tag) => {\n    // Avoids multiple occurence of identical tags\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  // Enable tags selection\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !== passedFilter));\n  };\n  // Returns empty list of selected tags\n  const handleClearFilter = () => {\n    return setFilters([]);\n  };\n\n  const filteredJobs = jobs.filter(filterFunction);\n\n  return (\n    <>\n      <header className=\" flex flex-col bg-green-700 text-white bg-opacity-75 mb-12\">\n        <img\n          className=\"w-full\"\n          src=\"images/bg-header-desktop.svg\"\n          alt=\"bg-image\"\n        />{\" \"}\n        Created by Clinton Emok\n      </header>\n      `\n      <div className=\"container m-auto \">\n        {filters.length > 0 && (\n          <div className={`flex  bg-white shadow-md my-16 mx-10 p-6 rounded`}>\n            {filters.map((filter) => (\n              <span\n                className=\" cursor-pointer mr-4 mb-4 rounded font-bold text-green-400 bg-blue-300 bg-opacity-50  p-2\n              transition duration-500 ease-in-out text-green-400 bg-blue-300 bg-opacity-50 hover:bg-black \n              transform hover:-translate-y-1 hover:scale-200  sm:mb-0\"\n                onClick={() => handleFilterClick(filter)}\n              >\n                {filter} ×\n              </span>\n            ))}\n            <button\n              className=\"text-grey-700 ml-auto font-bold rounded p-1 \n            transition duration-500 ease-in-out text-green-400 bg-blue-300 bg-opacity-50 \n            hover:bg-black transform hover:-translate-y-1 hover:scale-200 \"\n              onClick={() => handleClearFilter()}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n\n        {jobs.length === 0 ? (\n          <p>Jobs are getting fetched</p>\n        ) : (\n          filteredJobs.map((job) => (\n            <JobBoard job={job} key={job.id} handleTagClick={handleTagClick} />\n          ))\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// TODO\n// 1. Study the design & API (json) ✅\n// 2. Create Job Board (Takes Object)✅\n// 3. Retrieve data from JSON file✅\n// 4. Pass down data to Job Board✅\n// 5. Styling Mobile ✅\n// 6. Styling Desktop ✅\n// 7. Filter interaction✅\n","C:\\Users\\20193907\\Desktop\\Code Orange\\job-listings\\job-listings\\react-ui-app\\src\\components\\JobBoard.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":52,"column":9,"nodeType":"28","endLine":56,"endColumn":11},{"ruleId":"22","replacedBy":"29"},{"ruleId":"24","replacedBy":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["31"],["32"],"no-global-assign","no-unsafe-negation"]